name: Continuous Integration

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PYTHON_VERSION: "3.11"

jobs:
  # Code quality checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Run code quality checks
        run: |
          # Code formatting and linting
          black --check src/
          isort --check-only src/
          flake8 src/
          
          # Type checking
          mypy src/gha_optimizer
          
          # Security scan
          bandit -r src/gha_optimizer

  test:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[test]"
      
      - name: Run integration tests
        run: |
          python test_cli.py

  build:
    name: Build & Install
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [quality, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"
      
      - name: Build package
        run: python -m build
      
      - name: Test installation
        run: |
          pip install dist/*.whl
          gha-optimizer --version
          gha-optimizer --help
